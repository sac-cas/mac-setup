#!/bin/bash

if [ -z "$1" ]; then  echo "Usage: awsp profilename"; return; fi
   exists="$(aws configure get aws_access_key_id --profile "$1")"
   role_arn="$(aws configure get role_arn --profile "$1")"
   if [[ -n $exists || -n $role_arn ]]; then
       if [[ -n $role_arn ]]; then
           source_profile="$(aws configure get source_profile --profile "$1")"
           if [[ -n $source_profile ]]; then
              profile=$source_profile
           else
              profile=$1
           fi
           mfa_serial="$(aws configure get mfa_serial --profile "$profile")"
           
           unset AWS_REGION
           region="$(aws configure get region --profile "$1")"
           if [[ -z "$region" ]]; then
                region="$(aws configure get region --profile "$profile")"
           fi

           echo "Assuming role $role_arn using profile $profile"
           if [[ -n $mfa_serial ]]; then
                if command -v op > /dev/null 2>&1; then
                    echo "Retrieving otp via 1password"
                    mfa_token=$(op item get <AWS User Item> --otp)  
                else
                    echo "Please enter your MFA token for $mfa_serial:"
                    read mfa_token
                fi
               JSON="$(aws sts assume-role --profile="$profile" --role-arn "$role_arn" --role-session-name session-"$profile" --serial-number "$mfa_serial" --token-code "$mfa_token")"
           else
               JSON="$(aws sts assume-role --profile="$profile" --role-arn "$role_arn" --role-session-name session-"$profile")"
           fi

           aws_access_key_id="$(echo "$JSON" | jq -r '.Credentials.AccessKeyId')"
           aws_secret_access_key="$(echo "$JSON" | jq -r '.Credentials.SecretAccessKey')"
           aws_session_token="$(echo "$JSON" | jq -r '.Credentials.SessionToken')"
       else
           aws_access_key_id="$(aws configure get aws_access_key_id --profile "$1")"
           aws_secret_access_key="$(aws configure get aws_secret_access_key --profile "$1")"
           aws_session_token=""
       fi
       export AWS_REGION=$region
       export AWS_DEFAULT_PROFILE=$1
	   export AWS_PROFILE=$1
       export AWS_ACCESS_KEY_ID=$aws_access_key_id
       export AWS_SECRET_ACCESS_KEY=$aws_secret_access_key
       [[ -z "$aws_session_token" ]] && unset AWS_SESSION_TOKEN || export AWS_SESSION_TOKEN=$aws_session_token

       echo "Switched to AWS Profile: $1";
       aws configure list
   fi